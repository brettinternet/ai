version: '3'

vars:
  PKG_NAME: transcribe

tasks:
  install:
    desc: Install package in development mode
    cmds:
      - uv pip install -e .

  install:dev:
    desc: Install package with test dependencies
    cmds:
      - uv pip install -e ".[test]"

  test:
    desc: Run all tests with coverage
    cmds:
      - pytest tests/ --cov=src --cov-report=html --cov-report=term-missing -v

  test:unit:
    desc: Run only unit tests (fast)
    cmds:
      - pytest tests/test_transcribe.py -v

  test:basic:
    desc: Run basic functionality tests (fastest)
    cmds:
      - pytest tests/test_basic.py -v

  test:integration:
    desc: Run integration tests
    cmds:
      - pytest tests/test_integration.py -v

  test:watch:
    desc: Run tests in watch mode
    cmds:
      - pytest tests/ --cov=src -f

  lint:
    desc: Run code linting with ruff
    cmds:
      - ruff check src/ tests/
    silent: true

  lint:fix:
    desc: Fix linting issues automatically
    cmds:
      - ruff check --fix src/ tests/

  format:
    desc: Format code with ruff
    cmds:
      - ruff format src/ tests/

  run:
    desc: Run transcriber with default settings
    cmds:
      - python -m transcribe

  run:tiny:
    desc: Run transcriber with tiny model (fastest)
    cmds:
      - python -m transcribe --model tiny

  run:base:
    desc: Run transcriber with base model (balanced)
    cmds:
      - python -m transcribe --model base

  run:medium:
    desc: Run transcriber with medium model (recommended)
    cmds:
      - python -m transcribe --model medium

  run:custom:
    desc: Run transcriber with custom parameters
    cmds:
      - python -m transcribe {{.CLI_ARGS}}

  devices:
    desc: List available audio devices (Linux)
    cmds:
      - python -m transcribe --default_microphone list

  clean:
    desc: Clean up build artifacts and caches
    cmds:
      - rm -rf build/
      - rm -rf dist/
      - rm -rf *.egg-info/
      - rm -rf .pytest_cache/
      - rm -rf htmlcov/
      - find . -type d -name __pycache__ -exec rm -rf {} +
      - find . -name "*.pyc" -delete

  build:
    desc: Build package for distribution
    cmds:
      - uv build

  check:
    desc: Run all checks (lint, format check, test, build)
    cmds:
      - task: lint
      - task: format:check
      - task: test:basic
      - task: build

  format:check:
    desc: Check code formatting without making changes
    cmds:
      - ruff format --check src/ tests/

  fix:
    desc: Fix all auto-fixable issues (lint + format)
    cmds:
      - task: lint:fix
      - task: format

  dev:
    desc: Set up development environment
    cmds:
      - task: install:dev
      - echo "Development environment ready!"
      - echo "Run 'task run' to start transcribing"
